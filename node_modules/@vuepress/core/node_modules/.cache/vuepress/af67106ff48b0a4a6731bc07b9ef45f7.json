{"remainingRequest":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\vuepress-plugin-reading-progress\\ReadingProgress.vue?vue&type=style&index=0&id=56679cca&lang=stylus&scoped=true&","dependencies":[{"path":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\vuepress-plugin-reading-progress\\ReadingProgress.vue","mtime":1583496981746},{"path":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\css-loader\\dist\\cjs.js","mtime":1583304049276},{"path":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1583304057400},{"path":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\postcss-loader\\src\\index.js","mtime":1583304049621},{"path":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\stylus-loader\\index.js","mtime":1583304066893},{"path":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1583304047885},{"path":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\vue-loader\\lib\\index.js","mtime":1583304057400}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKJHJlYWRpbmdCZ0NvbG9yID89IHRyYW5zcGFyZW50CiRyZWFkaW5nWkluZGV4ID89IDEwMDAKJHJlYWRpbmdTaXplID89IDNweAokcmVhZGluZ1Byb2dyZXNzQ29sb3IgPz0gJGFjY2VudENvbG9yCiRyZWFkaW5nUHJvZ3Jlc3NJbWFnZSA/PSBub25lCgoucmVhZGluZy1wcm9ncmVzcwogIHBvc2l0aW9uIGZpeGVkCiAgei1pbmRleCAkcmVhZGluZ1pJbmRleAogIGJhY2tncm91bmQgJHJlYWRpbmdCZ0NvbG9yCiAgb3ZlcmZsb3cgaGlkZGVuCiAgLnByb2dyZXNzCiAgICB3aWR0aCAxMDAlCiAgICBoZWlnaHQgMTAwJQogICAgYmFja2dyb3VuZCAkcmVhZGluZ1Byb2dyZXNzQ29sb3IKICAgIGJhY2tncm91bmQtaW1hZ2UgJHJlYWRpbmdQcm9ncmVzc0ltYWdlCiAgICB0cmFuc2Zvcm0tb3JpZ2luIDAlIDAlCiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjJzIGVhc2Utb3V0Ci50b3AKICB0b3AgMAogIGxlZnQgMAogIHJpZ2h0IDAKICB3aWR0aCAxMDAlCiAgaGVpZ2h0ICRyZWFkaW5nU2l6ZQouYm90dG9tCiAgYm90dG9tIDAKICBsZWZ0IDAKICByaWdodCAwCiAgd2lkdGggMTAwJQogIGhlaWdodCAkcmVhZGluZ1NpemUKLmxlZnQKICBsZWZ0IDAKICB0b3AgMAogIGJvdHRvbSAwCiAgd2lkdGggJHJlYWRpbmdTaXplCiAgaGVpZ2h0IDEwMCUKLnJpZ2h0CiAgcmlnaHQgMAogIHRvcCAwCiAgYm90dG9tIDAKICB3aWR0aCAkcmVhZGluZ1NpemUKICBoZWlnaHQgMTAwJQo="},{"version":3,"sources":["ReadingProgress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReadingProgress.vue","sourceRoot":"node_modules/vuepress-plugin-reading-progress","sourcesContent":["<template>\n  <div v-if=\"$readingShow\" :class=\"$readingShow\" class=\"reading-progress\">\n    <div :style=\"progressStyle\" class=\"progress\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ReadingProgress',\n  data () {\n    return {\n      readingTop: 0,\n      readingHeight: 1,\n      progressStyle: null,\n      transform: ['transform']\n    }\n  },\n  watch: {\n    $readingShow () {\n      this.base()\n    }\n  },\n  mounted () {\n    this.base()\n  },\n  beforeDestroy () {\n    this.$readingShow && window.removeEventListener('scroll', this.getReadingBase)\n  },\n  methods: {\n    base () {\n      if (this.$readingShow) {\n        this.transform = this.getTransform()\n        this.progressStyle = this.getProgressStyle()\n        window.addEventListener('scroll', this.getReadingBase, 200)\n      }\n    },\n    getReadingBase () {\n      this.readingHeight = this.getReadingHeight() - this.getScreenHeight()\n      this.readingTop = this.getReadingTop()\n      this.progressStyle = this.getProgressStyle()\n    },\n    getReadingHeight () {\n      return document.body.offsetHeight\n        || document.body.scrollHeight\n        || 0\n    },\n    getScreenHeight () {\n      return window.innerHeight\n        || document.documentElement.clientHeight\n        || 0\n    },\n    getReadingTop () {\n      return window.pageYOffset\n        || document.documentElement.scrollTop\n        || document.body.scrollTop\n        || 0\n    },\n    getTransform () {\n      const transformList = ['transform', '-webkit-transform', '-moz-transform', '-o-transform', '-ms-transform']\n      return transformList.filter(item => this.supportCss(item))\n    },\n    getProgressStyle () {\n      const progress = this.readingTop / this.readingHeight\n      switch (this.$readingShow) {\n        case 'top':\n        case 'bottom':\n          if (this.transform[0]) {\n            return `${this.transform[0]}: scaleX(${progress})`\n          } else {\n            return `width: ${progress * 100}%`\n          }\n          break\n        case 'left':\n        case 'right':\n          if (this.transform[0]) {\n            return `${this.transform[0]}: scaleY(${progress})`\n          } else {\n            return `height: ${progress * 100}%`\n          }\n          break\n        default:\n          break\n      }\n    },\n    supportCss (value) {\n      const div = document.createElement('div')\n      return value in div.style\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n$readingBgColor ?= transparent\n$readingZIndex ?= 1000\n$readingSize ?= 3px\n$readingProgressColor ?= $accentColor\n$readingProgressImage ?= none\n\n.reading-progress\n  position fixed\n  z-index $readingZIndex\n  background $readingBgColor\n  overflow hidden\n  .progress\n    width 100%\n    height 100%\n    background $readingProgressColor\n    background-image $readingProgressImage\n    transform-origin 0% 0%\n    transition: transform .2s ease-out\n.top\n  top 0\n  left 0\n  right 0\n  width 100%\n  height $readingSize\n.bottom\n  bottom 0\n  left 0\n  right 0\n  width 100%\n  height $readingSize\n.left\n  left 0\n  top 0\n  bottom 0\n  width $readingSize\n  height 100%\n.right\n  right 0\n  top 0\n  bottom 0\n  width $readingSize\n  height 100%\n</style>\n"]}]}