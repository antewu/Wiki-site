{"remainingRequest":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\vuepress-theme-antdocs\\components\\NavLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\vuepress-theme-antdocs\\components\\NavLinks.vue","mtime":1583554403865},{"path":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1583304047885},{"path":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\babel-loader\\lib\\index.js","mtime":1583304047796},{"path":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1583304047885},{"path":"D:\\坚果云盘\\工作台\\项目\\Wiki-site\\node_modules\\vue-loader\\lib\\index.js","mtime":1583304057400}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHJlc29sdmVOYXZMaW5rSXRlbSwgaXNFeHRlcm5hbCwgZW5zdXJlRXh0IH0gZnJvbSAnLi4vdXRpbCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTmF2TGlua3MnLAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3VycmVudFN0eWxlOiB0aGlzLiRzdG9yZS5zdGF0ZS5uYXZTdHlsZSwKICAgICAgcm91dGVzUGF0aDogJycKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnJvdXRlc1BhdGggPSBKU09OLnN0cmluZ2lmeSh0aGlzLiR0aGVtZUNvbmZpZy5uYXYpCiAgfSwKICBtZXRob2RzOiB7CiAgICBpc0V4dGxpbmsocGF0aCkgewogICAgICBjb25zdCBSZWcgPSAvXig/Omh0dHAocyk/OlwvXC8pP1tcdy4tXSsoPzpcLltcd1wuLV0rKStbXHdcLVwuX346Lz8jW1xdQCFcJCYnXCpcKyw7PS5dKyQvCiAgICAgIHJldHVybiBSZWcudGVzdChwYXRoKQogICAgfSwKICAgIGxpbmsodXJsKSB7CiAgICAgIHVybCA9IHR5cGVvZiB1cmwgPT09ICd1bmRlZmluZWQnID8gJycgOiB1cmwKICAgICAgbGV0IF91cmwgPSBlbnN1cmVFeHQodXJsKQogICAgICBfdXJsID0gX3VybC5sZW5ndGggPT09IDUgJiYgX3VybCA9PT0gJy5odG1sJyA/IHRoaXMuZ2VuZUtleSgpIDogX3VybAogICAgICByZXR1cm4gX3VybAogICAgfSwKICAgIGdlbmVLZXkoKXsKICAgICAgcmV0dXJuIChNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwxMCkgKyAobmV3IERhdGUoKSkuZ2V0VGltZSgpKQogICAgfSwKICAgIGN1cnJlbnRQYXRoKHBhdGgpIHsKICAgICAgY29uc3QgYXJyYXkgPSB0aGlzLnJvdXRlc1BhdGgKICAgICAgaWYgKGFycmF5LmluZGV4T2YocGF0aCkgIT0gLTEpIHsKICAgICAgICByZXR1cm4gcGF0aAogICAgICB9ZWxzZXsKICAgICAgICBsZXQgX3N1ZmZpeCA9IHBhdGguc2xpY2UoLTUpCiAgICAgICAgaWYgKF9zdWZmaXggPT09ICcuaHRtbCcgKXsKICAgICAgICAgIGxldCBfcGF0aCA9IHBhdGgucmVwbGFjZSgnLmh0bWwnLCAnJykKICAgICAgICAgIGlmIChhcnJheS5pbmRleE9mKF9wYXRoKSAhPSAtMSl7CiAgICAgICAgICAgIHJldHVybiBwYXRoCiAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgbGV0IF9wYXRoID0gcGF0aC5yZXBsYWNlKC9bXlwvXSskLywgJycpCiAgICAgICAgICAgIHJldHVybiBfcGF0aAogICAgICAgICAgfQogICAgICAgIH1lbHNlewogICAgICAgICAgbGV0IF9wYXRoID0gcGF0aC5yZXBsYWNlKC9bXlwvXSskLywgJycpCiAgICAgICAgICByZXR1cm4gX3BhdGgKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjdXJyZW50UGFnZSgpIHsKICAgICAgcmV0dXJuIFt0aGlzLmN1cnJlbnRQYXRoKHRoaXMuJHBhZ2UucGF0aCldCiAgICB9LAoKICAgIHVzZXJOYXYoKSB7CiAgICAgIHJldHVybiB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5uYXYgfHwgdGhpcy4kc2l0ZS50aGVtZUNvbmZpZy5uYXYgfHwgW10KICAgIH0sCgogICAgbmF2KCkgewogICAgICBjb25zdCB7IGxvY2FsZXMgfSA9IHRoaXMuJHNpdGUKICAgICAgaWYgKGxvY2FsZXMgJiYgT2JqZWN0LmtleXMobG9jYWxlcykubGVuZ3RoID4gMSkgewogICAgICAgIGNvbnN0IGN1cnJlbnRMaW5rID0gdGhpcy4kcGFnZS5wYXRoCiAgICAgICAgY29uc3Qgcm91dGVzID0gdGhpcy4kcm91dGVyLm9wdGlvbnMucm91dGVzCiAgICAgICAgY29uc3QgdGhlbWVMb2NhbGVzID0gdGhpcy4kc2l0ZS50aGVtZUNvbmZpZy5sb2NhbGVzIHx8IHt9CiAgICAgICAgY29uc3QgbGFuZ3VhZ2VEcm9wZG93biA9IHsKICAgICAgICAgIHRleHQ6IHRoaXMuJHRoZW1lTG9jYWxlQ29uZmlnLnNlbGVjdFRleHQgfHwgJ0xhbmd1YWdlcycsCiAgICAgICAgICBhcmlhTGFiZWw6IHRoaXMuJHRoZW1lTG9jYWxlQ29uZmlnLmFyaWFMYWJlbCB8fCAnU2VsZWN0IGxhbmd1YWdlJywKICAgICAgICAgIGl0ZW1zOiBPYmplY3Qua2V5cyhsb2NhbGVzKS5tYXAocGF0aCA9PiB7CiAgICAgICAgICAgIGNvbnN0IGxvY2FsZSA9IGxvY2FsZXNbcGF0aF0KICAgICAgICAgICAgY29uc3QgdGV4dCA9ICh0aGVtZUxvY2FsZXNbcGF0aF0gJiYgdGhlbWVMb2NhbGVzW3BhdGhdLmxhYmVsKSB8fCBsb2NhbGUubGFuZwogICAgICAgICAgICBsZXQgbGluawogICAgICAgICAgICAvLyBTdGF5IG9uIHRoZSBjdXJyZW50IHBhZ2UKICAgICAgICAgICAgaWYgKGxvY2FsZS5sYW5nID09PSB0aGlzLiRsYW5nKSB7CiAgICAgICAgICAgICAgbGluayA9IGN1cnJlbnRMaW5rCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8gVHJ5IHRvIHN0YXkgb24gdGhlIHNhbWUgcGFnZQogICAgICAgICAgICAgIGxpbmsgPSBjdXJyZW50TGluay5yZXBsYWNlKHRoaXMuJGxvY2FsZUNvbmZpZy5wYXRoLCBwYXRoKQogICAgICAgICAgICAgIC8vIGZhbGxiYWNrIHRvIGhvbWVwYWdlCiAgICAgICAgICAgICAgaWYgKCFyb3V0ZXMuc29tZShyb3V0ZSA9PiByb3V0ZS5wYXRoID09PSBsaW5rKSkgewogICAgICAgICAgICAgICAgbGluayA9IHBhdGgKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHsgdGV4dCwgbGluayB9CiAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgICByZXR1cm4gWy4uLnRoaXMudXNlck5hdiwgbGFuZ3VhZ2VEcm9wZG93bl0KICAgICAgfQogICAgICByZXR1cm4gdGhpcy51c2VyTmF2CiAgICB9LAoKICAgIHVzZXJMaW5rcygpIHsKICAgICAgcmV0dXJuICh0aGlzLm5hdiB8fCBbXSkubWFwKGxpbmsgPT4gewogICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHJlc29sdmVOYXZMaW5rSXRlbShsaW5rKSwgewogICAgICAgICAgaXRlbXM6IChsaW5rLml0ZW1zIHx8IFtdKS5tYXAocmVzb2x2ZU5hdkxpbmtJdGVtKQogICAgICAgIH0pCiAgICAgIH0pCiAgICB9LAoKICAgIHJlcG9MaW5rKCkgewogICAgICBjb25zdCB7IHJlcG8gfSA9IHRoaXMuJHNpdGUudGhlbWVDb25maWcKICAgICAgaWYgKHJlcG8pIHsKICAgICAgICByZXR1cm4gL15odHRwcz86Ly50ZXN0KHJlcG8pID8gcmVwbyA6IGBodHRwczovL2dpdGh1Yi5jb20vJHtyZXBvfWAKICAgICAgfQogICAgICByZXR1cm4gbnVsbAogICAgfQoKICAgIC8vIHJlcG9MYWJlbCAoKSB7CiAgICAvLyAgIGlmICghdGhpcy5yZXBvTGluaykgcmV0dXJuCiAgICAvLyAgIGlmICh0aGlzLiRzaXRlLnRoZW1lQ29uZmlnLnJlcG9MYWJlbCkgewogICAgLy8gICAgIHJldHVybiB0aGlzLiRzaXRlLnRoZW1lQ29uZmlnLnJlcG9MYWJlbAogICAgLy8gICB9CgogICAgLy8gICBjb25zdCByZXBvSG9zdCA9IHRoaXMucmVwb0xpbmsubWF0Y2goL15odHRwcz86XC9cL1teL10rLylbMF0KICAgIC8vICAgY29uc3QgcGxhdGZvcm1zID0gWydHaXRIdWInLCAnR2l0TGFiJywgJ0JpdGJ1Y2tldCddCiAgICAvLyAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGxhdGZvcm1zLmxlbmd0aDsgaSsrKSB7CiAgICAvLyAgICAgY29uc3QgcGxhdGZvcm0gPSBwbGF0Zm9ybXNbaV0KICAgIC8vICAgICBpZiAobmV3IFJlZ0V4cChwbGF0Zm9ybSwgJ2knKS50ZXN0KHJlcG9Ib3N0KSkgewogICAgLy8gICAgICAgcmV0dXJuIHBsYXRmb3JtCiAgICAvLyAgICAgfQogICAgLy8gICB9CgogICAgLy8gICByZXR1cm4gJ1NvdXJjZScKICAgIC8vIH0KICB9Cn0K"},{"version":3,"sources":["NavLinks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"NavLinks.vue","sourceRoot":"node_modules/vuepress-theme-antdocs/components","sourcesContent":["<template>\n  <nav v-if=\"userLinks.length || repoLink\" class=\"nav-links\">\n    <a-menu :mode=\"currentStyle\" id=\"nav\" v-model=\"currentPage\" :selectable=\"false\">\n      <template v-for=\"item in userLinks\">\n        <a-sub-menu v-if=\"item.type === 'links'\" :key=\"link(item.link)\">\n          <span slot=\"title\">\n            {{ item.text }}\n          </span>\n          <template v-for=\"(subItem, index) in item.items\">\n            <a-menu-item-group :title=\"subItem.text\" v-if=\"subItem.type === 'links'\" :key=\"link(subItem.link) || index\">\n              <a-menu-item v-for=\"childSubItem in subItem.items\" :key=\"link(childSubItem.link)\">\n                <a v-if=\"isExtlink(childSubItem.link)\" :href=\"link(childSubItem.link)\" target=\"_blank\">\n                  {{ childSubItem.text }}\n                  <a-icon type=\"link\" />\n                </a>\n                <RouterLink v-else :to=\"link(childSubItem.link)\">\n                  {{ childSubItem.text }}\n                </RouterLink>\n              </a-menu-item>\n            </a-menu-item-group>\n            <a-menu-item :key=\"subItem.link\" v-else>\n              <a v-if=\"isExtlink(subItem.link)\" :href=\"link(subItem.link)\" target=\"_blank\">\n                {{ subItem.text }}\n                <a-icon type=\"link\" />\n              </a>\n              <RouterLink v-else :to=\"link(subItem.link)\">\n                {{ subItem.text }}\n              </RouterLink>\n            </a-menu-item>\n          </template>\n        </a-sub-menu>\n        <a-menu-item :key=\"item.link\" v-else>\n          <a v-if=\"isExtlink(item.link)\" :href=\"link(item.link)\" target=\"_blank\">\n            {{ item.text }}\n            <a-icon type=\"link\" />\n          </a>\n          <RouterLink v-else :to=\"link(item.link)\">\n            {{ item.text }}\n          </RouterLink>\n        </a-menu-item>\n      </template>\n    </a-menu>\n    <a v-if=\"repoLink\" :href=\"repoLink\" class=\"repo-link\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <a-icon type=\"github\" />\n    </a>\n  </nav>\n</template>\n\n<script>\nimport { resolveNavLinkItem, isExternal, ensureExt } from '../util'\n\nexport default {\n  name: 'NavLinks',\n\n  data() {\n    return {\n      currentStyle: this.$store.state.navStyle,\n      routesPath: ''\n    }\n  },\n  created() {\n    this.routesPath = JSON.stringify(this.$themeConfig.nav)\n  },\n  methods: {\n    isExtlink(path) {\n      const Reg = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\*\\+,;=.]+$/\n      return Reg.test(path)\n    },\n    link(url) {\n      url = typeof url === 'undefined' ? '' : url\n      let _url = ensureExt(url)\n      _url = _url.length === 5 && _url === '.html' ? this.geneKey() : _url\n      return _url\n    },\n    geneKey(){\n      return (Math.random().toString(36).substr(2,10) + (new Date()).getTime())\n    },\n    currentPath(path) {\n      const array = this.routesPath\n      if (array.indexOf(path) != -1) {\n        return path\n      }else{\n        let _suffix = path.slice(-5)\n        if (_suffix === '.html' ){\n          let _path = path.replace('.html', '')\n          if (array.indexOf(_path) != -1){\n            return path\n          }else{\n            let _path = path.replace(/[^\\/]+$/, '')\n            return _path\n          }\n        }else{\n          let _path = path.replace(/[^\\/]+$/, '')\n          return _path\n        }\n      }\n    }\n  },\n  computed: {\n    currentPage() {\n      return [this.currentPath(this.$page.path)]\n    },\n\n    userNav() {\n      return this.$themeLocaleConfig.nav || this.$site.themeConfig.nav || []\n    },\n\n    nav() {\n      const { locales } = this.$site\n      if (locales && Object.keys(locales).length > 1) {\n        const currentLink = this.$page.path\n        const routes = this.$router.options.routes\n        const themeLocales = this.$site.themeConfig.locales || {}\n        const languageDropdown = {\n          text: this.$themeLocaleConfig.selectText || 'Languages',\n          ariaLabel: this.$themeLocaleConfig.ariaLabel || 'Select language',\n          items: Object.keys(locales).map(path => {\n            const locale = locales[path]\n            const text = (themeLocales[path] && themeLocales[path].label) || locale.lang\n            let link\n            // Stay on the current page\n            if (locale.lang === this.$lang) {\n              link = currentLink\n            } else {\n              // Try to stay on the same page\n              link = currentLink.replace(this.$localeConfig.path, path)\n              // fallback to homepage\n              if (!routes.some(route => route.path === link)) {\n                link = path\n              }\n            }\n            return { text, link }\n          })\n        }\n        return [...this.userNav, languageDropdown]\n      }\n      return this.userNav\n    },\n\n    userLinks() {\n      return (this.nav || []).map(link => {\n        return Object.assign(resolveNavLinkItem(link), {\n          items: (link.items || []).map(resolveNavLinkItem)\n        })\n      })\n    },\n\n    repoLink() {\n      const { repo } = this.$site.themeConfig\n      if (repo) {\n        return /^https?:/.test(repo) ? repo : `https://github.com/${repo}`\n      }\n      return null\n    }\n\n    // repoLabel () {\n    //   if (!this.repoLink) return\n    //   if (this.$site.themeConfig.repoLabel) {\n    //     return this.$site.themeConfig.repoLabel\n    //   }\n\n    //   const repoHost = this.repoLink.match(/^https?:\\/\\/[^/]+/)[0]\n    //   const platforms = ['GitHub', 'GitLab', 'Bitbucket']\n    //   for (let i = 0; i < platforms.length; i++) {\n    //     const platform = platforms[i]\n    //     if (new RegExp(platform, 'i').test(repoHost)) {\n    //       return platform\n    //     }\n    //   }\n\n    //   return 'Source'\n    // }\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import '../styles/palette.less';\n\n.nav-links {\n  float: right;\n  margin-right: 4rem;\n  font-size: 1rem;\n\n  .repo-link {\n    color: inherit;\n    font-size: 1.5rem;\n    position: absolute;\n    right: 1.7rem;\n    top: 0;\n    line-height: @navbarHeight;\n\n    &:hover {\n      color: @accentColor;\n    }\n  }\n}\n\n@media (max-width: @MQMobile) {\n  .nav-links {\n    float: none;\n    margin-right: 0;\n\n    .repo-link {\n      display: none;\n    }\n    .ant-menu-inline,\n    .ant-menu-vertical,\n    .ant-menu-vertical-left {\n      border: none;\n    }\n  }\n}\n</style>\n"]}]}